@article{OSSOpenSourceVSClosed2023,
  title = {Open Source vs Closed Source: Pros and Cons},
  author = {{OSSPH Blog}},
  year = {2023},
  journal = {OSSPH Blog},
  url = {https://blog.ossph.org/open-source-vs-closed-source-pros-and-cons/},
  abstract = {This article compares open source and closed source software. Open-source software is often community driven and free, but can lack support and quality control. On the other hand, closed source software is more secure and reliable, but more expansive and less freedom. This blog post provides a balanced overview on both open and closed source software without taking a biased stance. It will be a valuable opinion to make my argument to be less biased. It will also become a helpful introduction to those new to this topic. In addition, the post is organized into clear sections with examples, which can provide concrete examples in my article to make the concepts accessible. The article provides a detailed list of pros and cons of both types of the software. This can help me construct my argument with the pros of free software and cons of closed-source software; and give me some ideas on the possible counter-arguments. Since the article doesn’t have much bias, the counter-argument coming from it might be closer to the real ones. The strengths of this article is its unbiased aspect. This could help me understand the advantages and disadvantages of the two software more objectively and use them as my evidence or possible counterarguments. The article covers various aspects, including support, quality control, security, transparency, and cost, giving a holistic view of both types. It provides many examples when discussing the pros and cons. This can make the article more convincing to the readers. The weaknesses are that each comparison is simplified, and the article didn’t elaborate detailed comparisons on each aspect. The discussion on each aspect of the pros and cons might be more nuanced. The article implies that closed source software is more secure because the code is not available. This can be misleading, since open-source software can also have high security through transparency and rapid community response.},
  langid = {english},
}

@article{SacksCompetition2015,
  title = {Competition Between Open Source and Proprietary Software: Strategies for Survival},
  author = {Michael Sacks},
  year = {2015},
  journal = {Journal of Management Information Systems},
  volume = {32},
  number = {1},
  pages = {206-235},
  doi = {10.1080/07421222.2015.1099391},
  url = {https://www.tandfonline.com/doi/full/10.1080/07421222.2015.1099391},
  abstract = {The article shows a study case on the competition in the software industry. The article discussed the business means of the open-source software (OSS) companies. They would provide free software, but many of them will sell customer and user guides. Although users can get the software without charge, it will lead to the cost of time and effort to learn the software. The model provided results that Consumers with a lower opportunity cost choose to get source code and spend time and effort to make it usable, while consumers with higher opportunity cost of time would choose to pay to get an easier using experience. This article provides a study on the market strategy an OSS company might make to earn money. The article proves that this is executable to approach both money making and open source. This article can possibly become a support for the argument that the company can maximize the freedom of users while making money. Combining with the previous article, this article provides a detailed example on the fact that free software can earn money, which covers the weakness that that article lacks. In addition, this article also provides an interesting idea that free software may not charge the price themselves, but charge on the support users need to learn the technology. In this way, users can get maximum freedom, and the company can earn money with the teaching service. The strengths on this article is that it's a study on OSS, which is related to my topic. The study will become a powerful support on the argument since the result is supportive to my argument. The article also discussed a specific algorithm on the customers buying follow up services. This should provide a standard on how to modify the service to make money for the companies.},
  langid = {english},
}

@article{SellingFreeSoftware,
  title = {Selling Free Software},
  author = {{Free Software Foundation}},
  year = {n.d.},
  journal = {GNU Project - Free Software Foundation},
  url = {https://www.gnu.org/philosophy/selling.en.html},
  abstract = {This article talked about the misconception on free software. Free software is not saying that the software is free in price, but provides the freedom to the users on modifying the code. I want this source because it clarifies what free software is. This article helps point out the fact that “free software” does not mean priceless, but focusing on the freedom of users. With the support of this article, I can strengthen the argument that software should empower users rather than restrict them. Additionally, the site emphasized on how free software allows users to access, modify and share, which would be a clear contrast compared with the closed source software. Meanwhile, the article also underlines the community benefits of the free software. Compared to the closed source software, the free software could get help from the community. The article can provide a strong answer towards the counter arguments like “companies need closed source software to make money”. The article argued that users will pay for the free software as the support for sharing the software, which means that the companies can still make money with the free software. The strengths of this article is that it has a concrete definition and clarification on the core of free software. This can provide a crucial counter-argument towards closed source software. By discussing the freedom to charge the software, the article presents the view that free software can be sustainable, which challenged the stereotype about open-source models. It addressed proprietary software like high charge and restricted access, showing how free software avoids those problems. This will be the comparative basis of the argument. The weakness of this article is that it lacks specific cases or real-world examples of free software success or free software with charge to support the argument. This might make the argument less convincing. This article was all about the advantages of the free software, but not showing the other side. This might make the article seem to be biased to the readers. },
  langid = {english},
}

@article{WhatIsFreeSoftware,
  title = {What is Free Software?},
  author = {{Free Software Foundation}},
  year = {n.d.},
  journal = {Free Software Foundation},
  url = {https://www.fsf.org/about/what-is-free-software},
  abstract = {This article by the Free Software Foundation (FSF) provides a foundational understanding of the free software movement, centered around what is known as the "four essential freedoms" required for software to be considered "truly" free. These freedoms include the rights to run, study, share, and modify the software. The article explains that these principles are crucial to user rights and giving the user of a program/OS total control of what they're doing. The article specifically argues that proprietary software models limit transperency. This is the key word within this article: Transparency. For all the well working and good programs that we use today, they all lack a lot of transparency. Big tech is constantly lying to you about how your data is used, where it goes, and what they know about you. Because we use their services we are automatically forced to comply with their guidelines. The Free software foundation argues that without these freedoms, users are trapped by what they don't know. This article is extremely specific to our topic and thesis because it explains why the idea of free software is so important. It gives a reasoning behind our thesis topic and explains the backing ideologies that we share. It highlights why access to source code is crucial for fostering innovation and focuses on a community driven approach to advance software as a whole. It explains that only by writing the source code by the people actually using the product can we have true control over our technological infrastructure. The only issue with this artical is that it's short in length and potentially biased as it's written by the man who founded the free software movement. I can see how people who don't support my point of view could argue that this ideology is somewhat socialist and how we need capitalist markets to drive technological change.},
  langid = {english},
}

@article{FreeSoftwareIdea2021,
  title = {Free Software: An Idea Whose Time Has Passed?},
  author = {Lefkowitz, Robert M.},
  year = {2021},
  journal = {Medium},
  url = {https://r0ml.medium.com/free-software-an-idea-whose-time-has-passed-6570c1d8218a},
  abstract = {This article questions the relevance of the free software movement, suggesting that it its foundational principles no longer align with modern tehcnological practices and priorities. He looks on the history of the free software movment and how it has evolved since its creation, with arguments that its core principles/mission have been overshadowed by the capitalization and commercialization of proprietary software. The author agrees that while the original mission was to empower users through freedoma and transparency of software, he feels like the movement has now become misguided. This article provides a few different counterpoints to the ideals of the free software movement, touching on it's limitation and challenges. The author is very critical of modern day tech, pointing out how these free/open-source ideas can't keep up with modern proprietary software. He goes on to explain that sometimes it's worth comprimising on freedom in favor of usability, stability, and widespread adoption. There are a lot of question asked about whether the free software movement can realistically meet its original goals amongst the exponential growth that we're seeing in tech today. This article is extremely pertinent to our thesis as it provides a strong stance for a counterpoint. It goes well into detail about the problems with the original ideas and how time may have slowly passed it by. It's also a great insight for our thesis because it does help reinforce a lot of the arguments that I plan on making, giving us a balanced perspective that considers both the movements ideological roots and practical challenges. The cons about this article is that it's heavily biased against my thesis. The author clearly has a strong feeling against the idea of open source software and shows a strong love for the ease of use that modern propreitary software offers. I feel like most of this article is spent bashing the idea of open source instead of explaining why proprietary software is better.},
  langid = {english},
}

@article{whySoftwareShouldBeFree,
  title = {Why software should be free},
  author = {Stallman, Richard M.},
  year = {n.d.},
  journal = {GNU Project - Free Software Foundation},
  url = {https://www.gnu.org/philosophy/shouldbefree.en.html},
  abstract = {This article was written by the pioneer of the free software movement Richard Stallman. It is another article on my list of annotated bibliographies that explains why he believes that all software should be free, critisizing commercial/proprietary software models explaining that they are inherently restrictive and exploitative. He goes on to say that proprietary software often comprimises quality, user rights, and protection of user data by prioritizing profits over control and transparency. He believes that comercial software often lacks transparency to the consumer and in turn creates a dependency between user and corporate. This dependency is exploited for captial gain, creating recurring revenue for coroporate. This can be seen over a multitide of ways: apple designs a system that is easy to use and is easy on the eyes, in turn people start to like it and use it more to the point that without it we don't have any other option but to use their product. He believes that this dependency is against the ethical responsibilities of software creators and leads to an environment where users are stripped of their control over their own machines. This article delves into the philisophical underpinnings of the free software movements and the motivations behind Stallmans advocacy for software freedom. It emphasizes the ethical and philisophical aspects for free software, emphasizing that it not only promotoes better quality but also respects the users privacy. This article is relevant to my topic as it provides an in depth philiophical and ethical take on why software should be free. Unlike other articles on my list that list a lot of the practical purposes and points for using open source software, this one specifically delves into why it's an ethical decision to let people have control over the systems they use, specifically mentioning that it gives the users "transparency". The cons about this article is that it's written by the founder of the free software movement, which could provide some biased opinions.},
  langid = {english},
}

@article{ForbesOpenSourceBusinessModel,
  title = {Why The Business Model Of Open-Source Software Works},
  author = {{Forbes Technology Council}},
  year = {2022},
  journal = {Forbes},
  url = {https://www.forbes.com/sites/forbestechcouncil/2022/09/02/why-the-business-model-of-open-source-software-works/},
  abstract = {This article explores how open-source software can serve as a viable business model. It examines how companies use open-source software to foster innovation and discusses challenges and opportunities in adopting an open-source business strategy. The article also highlights successful case studies and offers insights into integrating open-source principles with profitable enterprise practices.},
  langid = {english},
}

@article{OpenInnovationComparison,
  title = {Open Source vs. Proprietary Software: A Comprehensive Comparison},
  author = {{Open Innovation Projects}},
  year = {n.d.},
  journal = {Open Innovation Projects},
  url = {https://open-innovation-projects.org/blog/open-source-software-vs-proprietary-software-a-comprehensive-comparison},
  abstract = {This article provides an extensive comparison between open-source and proprietary software, focusing on cost, security, flexibility, and support. It outlines the strengths and weaknesses of each approach and offers insights to guide organizations and individuals in making the best choice for their specific needs.},
  langid = {english},
}

@misc{TikTokPrivacyPolicy,
  title = {TikTok Privacy Policy},
  author = {{TikTok Inc.}},
  year = {2024},
  howpublished = {\url{https://www.tiktok.com/legal/page/us/privacy-policy/en}},
  abstract = {This document outlines TikTok's privacy practices, including how user data is collected, used, and shared. It provides insights into the policies governing data security and user privacy on the platform.},
  langid = {english},
}

@misc{GNUGPLv3,
  title = {GNU General Public License, Version 3},
  author = {{Free Software Foundation}},
  year = {2007},
  howpublished = {\url{https://www.gnu.org/licenses/gpl-3.0.en.html}},
  abstract = {The GNU General Public License (GPL) version 3 is a free software license that ensures end users' freedom to run, study, share, and modify software. It also includes provisions addressing software patents, tivoization, and compatibility with other licenses, making it one of the most comprehensive free software licenses available.},
  langid = {english},
}